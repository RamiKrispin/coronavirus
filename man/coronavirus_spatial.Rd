% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coronavirus_spatial.R
\name{coronavirus_spatial}
\alias{coronavirus_spatial}
\title{coronavirus_spatial}
\source{
Johns Hopkins University Center for Systems Science and Engineering (JHU CCSE) Coronavirus \href{https://systems.jhu.edu/research/public-health/ncov/}{website}

The \link[rnaturalearth]{rnaturalearth}
}
\usage{
coronavirus_spatial(
  return_shape = c("point", "polygon"),
  updated_data = FALSE,
  returncols = c("all", "simple", "reduced"),
  ...
)
}
\arguments{
\item{return_shape}{Should the \link[sf]{sf} object returned be points for cases or polygons of countries?
Defaults to `point`.}

\item{updated_data}{Should the `coronavirus` data be updated before generating the spatial
object. Updated the data in the toplevel environment, as, why not. Defaults to `FALSE`}

\item{returncols}{What coluns do you want returned. Defaults to `all`, giving all columns from
the original `coronavirus` dataset as well as those returned by \link[rnaturalearth]{ne_countries}.
`simple` returned those from `coronavirus` as well as some larger scale geographic information.
`reduced` returns the info from `simple` as well as information on population, income, and a
number of ISO codes.}

\item{...}{Other arguments to \link[rnaturalearth]{ne_countries}}
}
\value{
An `sf` object with either country borders as polygons or cases as points
}
\description{
Create a geospatial version of the \link[coronavirus]{coronavirus} data set for
easier visualization and spatial analysis. Uses \link[rnaturalearth]{rnaturalearth} for the
the spatial info and generates \link[sf]{sf} objects using \link[sf]{st_join} to match up
datasets.
}
\examples{
\dontrun{
library(ggplot2)
library(dplyr)
library(rnaturalearth)

worldmap <- ne_countries(returnclass = "sf")


coronavirus_points <- coronavirus_spatial() \%>\%
                       filter(date == "2020-03-08") \%>\%
                       filter(type == "confirmed")

coronavirus_polys <- coronavirus_spatial(return_shape = "polygon")\%>\%
                       filter(date == "2020-03-08")\%>\%
                       filter(type == "confirmed")

ggplot(worldmap) +
  geom_sf() +
  geom_sf(data = coronavirus_polys, aes(fill = log10(cases+1))) +
  geom_sf(data = coronavirus_points) +
  scale_fill_viridis_c() +
  theme_void()

}
}
